[{"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/index.js":"1","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/App.js":"2","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/coinGeckoAPI/coinGeckoData.js":"3","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/pagination/Pagination.js":"4","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/search/Search.js":"5","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/signup/Signup.js":"6","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/login/Login.js":"7","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/useToken.js":"8","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/MyWatchlist/MyWatchlist.js":"9","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/myWatchlist/MyWatchlist.js":"10","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/myCollection/MyCollection.js":"11"},{"size":464,"mtime":1608926693434,"results":"12","hashOfConfig":"13"},{"size":5676,"mtime":1613582805581,"results":"14","hashOfConfig":"13"},{"size":4229,"mtime":1613581836091,"results":"15","hashOfConfig":"13"},{"size":716,"mtime":1613076484241,"results":"16","hashOfConfig":"13"},{"size":5580,"mtime":1613536983949,"results":"17","hashOfConfig":"13"},{"size":3414,"mtime":1613502923631,"results":"18","hashOfConfig":"13"},{"size":4310,"mtime":1613582625964,"results":"19","hashOfConfig":"13"},{"size":600,"mtime":1613106780687,"results":"20","hashOfConfig":"13"},{"size":125,"mtime":1613105225504,"results":"21","hashOfConfig":"13"},{"size":125,"mtime":1613105225504,"results":"22","hashOfConfig":"13"},{"size":130,"mtime":1613105357971,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pv58m6",{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/index.js",[],["50","51"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/App.js",["52","53","54","55","56","57","58"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/coinGeckoAPI/coinGeckoData.js",["59","60","61"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/pagination/Pagination.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/search/Search.js",["62","63","64","65","66","67","68","69","70"],"import {useEffect, useState} from 'react'\nimport './Search.css'\nimport CoinGeckoApi from '../coinGeckoAPI/coinGeckoData'\nconst CoinGecko = require('coingecko-api');\n\n\n\n\n\n\n// func()\nconst Search =  ({ searchValue, setSearchValue, setCoinResults, coinResults, loading, allCoinINS, currencyType, setCurrencyType, setSearchedCoins, searchedCoins}) => {\n\n\nconst idData = []\nconst nameData = []\nconst symbolData = []\n\n\n\n\n    const handleSearchInput =  async(inputValue)=>{\n    \n\n      setSearchValue(inputValue)\n      // setCoinResults(coinResults)\n      console.log(inputValue)\n\n\n      // const getEach =\n        allCoinINS.map(value =>{\n    \n        idData.push(value.id)\n        // nameData.push(value.name)\n        // symbolData.push(value.symbol)\n        \n\n        })\n\n\n        const filteredSearch = idData.filter(value => value.includes(inputValue))\n        // console.log(filteredSearch)\n        const CoinGeckoClient = new CoinGecko();\n\n        let market =  await CoinGeckoClient.coins.markets({ vs_currency: currencyType, ids: filteredSearch})\n        // console.log(market)\n\n        \n        const filteredSearchArray =[]\n        \n      market.data.map((value)=>{\n\n        if(value.market_cap === null){\n          let acceptedCoin = value\n          \n    \n          return acceptedCoin\n\n        }\n\n            \n            let coinCard = {\n              id: value.id,\n              name: value.name,\n              symbol: value.symbol,\n              market_cap_rank:value.market_cap_rank,\n              market_cap: value.market_cap,\n              circulating_supply: value.circulating_supply,\n              image: value.image,\n              current_price: value.current_price\n\n            }\n            \n            \n            filteredSearchArray.push(coinCard)\n\n          \n        })\n        console.log(filteredSearchArray)\n        setSearchedCoins(filteredSearchArray)\n        // setCoinResults(filteredSearchArray)\n        \n      }\n  \n    //  setCoinResults(coinResults)\n      //  console.log(acceptedCoin)\n      // }\n      // )/\n\n\n    \n\n      const searchBar = \n      // <div className=\"search__element\">\n      // <nav className=\"router__tabs\">\n\n      <input \n          className=\"search__input\"\n          type=\"text\"\n          placeholder=\" Search Cryptocurrencies\"\n          value={searchValue}\n          onChange={(e)=> handleSearchInput(e.target.value)}\n          />\n      {/* <button \n        className=\"search__button\"\n        // onClick={handleSearchButton}\n        >Search\n      </button>     */}\n      {/* // </div> */}\n\n// </nav>\n    \n\n    const currencyObj = {\n      style: \"currency\",\n      currency: \"usd\",\n      // currencyDisplay: 'code'\n  }\n\n        const searchIdentifiers =  \n        \n\n        <div className=\"coin__info\">\n\n        {searchedCoins.filter(coinInfo =>\n\n          coinInfo.id.includes(searchValue) ||\n            coinInfo.id.toUpperCase().includes(searchValue)\n          || \n          coinInfo.symbol.includes(searchValue) || coinInfo.symbol.toUpperCase().includes(searchValue)\n          ||\n          coinInfo.name.includes(searchValue) || coinInfo.name.toUpperCase().includes(searchValue))\n          .map(filteredCoin=>(\n            <div \n            key={filteredCoin.id} \n            className=\"coin__card\"        \n        >\n            {/* <div className=\"card__rank\">Rank: #{filteredCoin.market_data.market_cap_rank} {<br/>}( {filteredCoin.symbol.toUpperCase()} ) </div>\n            <div className=\"card__marketcap\">{filteredCoin.market_data.market_cap.usd.toLocaleString(\"en-US\")}</div>\n            <img className=\"card__image\" src={filteredCoin.image.large} alt={filteredCoin.name}/>\n            <div className=\"card__name\">{filteredCoin.name}</div>\n            <div className=\"card__price\"> ${filteredCoin.market_data.current_price.usd}</div> */}\n\n                    <div className=\"card__rank\">{\"_ \"}Rank: #{filteredCoin.market_cap_rank} {<br/>} _<strong> ( {filteredCoin.symbol.toUpperCase()} )</strong> </div>\n                    <div className=\"card__marketcap\">MCap: {filteredCoin.market_cap.toLocaleString(\"en-US\",currencyObj )}</div>\n                    <div className=\"card__circulating__supply\">Circulating Supply: {<br/>} {Number(filteredCoin.circulating_supply).toLocaleString(\"en-US\")} <strong> {filteredCoin.symbol.toUpperCase()}</strong></div>\n                    \n\n                    <img className=\"card__image\" src={filteredCoin.image} alt={filteredCoin.name}/>\n                    <div className=\"card__name\">{filteredCoin.name}</div>\n                    <div className=\"current__price\">  Price</div>\n                    <div className=\"card__price\"> USD:  {\"  \"}{filteredCoin.current_price} \n                    {/* <hr/>  */}\n                    {/* BTC: ₿{filteredCoin.current_price.btc} */}\n                    {/* <hr/>  */}\n                    {/* ETH: {filteredCoin.current_price.eth} */}\n                    {/* <hr/>  */}\n\n                    </div>\n        </div>\n\n\n          ))\n        \n        }\n          </div>\n          \n\n\n\n    return (\n\n\n        <div>\n          {searchBar}\n\n            \n                  <div>\n                  {searchValue.length !== 0 ?\n                      <div>\n                        <div className=\"search__length\">\n                          {searchedCoins.length} matching Results\n                        </div>\n                      {searchIdentifiers}\n                      </div>\n                    :\n                    <div>\n                    </div>\n                  }\n                  </div>  \n      </div>  \n\n      \n    )\n    }\n\nexport default Search;","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/signup/Signup.js",["71","72"],"import {useState} from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\n const Signup = () => {\n  const [open, setOpen] = useState(false);\n\n  //=============================================================================================================//\n  //=============================================================================================================//\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //=============================================================================================================//\n  //=============================================================================================================//\n\n//   return (\n//     <div>\n//       <nav className=\"header__navigator\">\n//         <div className=\"registration__buttons\">\n//           <a className=\"login__button\" href={handleClickOpen}>Login</a>\n//           <a className=\"signup__button\">Register</a>\n//         </div>\n//       </nav>\n\n//       <Dialog\n//         open={open}\n//         onClose={handleClose}\n//         aria-labelledby=\"form-dialog-title\"\n//       ></Dialog>\n//     </div>\n//   );\n\n\n\n\nreturn (\n    <div>\n\n        <span className=\"signup__button\" onClick={handleClickOpen}>Sign up</span>\n\n      <Dialog open={open} onClose={handleClose}  fullWidth='true' maxWidth='xs' aria-labelledby=\"form-dialog-title\">\n        \n        <DialogContent>\n          <DialogTitle id=\"form-dialog-title\"><h1> Sign Up <br/> Create an Account</h1></DialogTitle>\n          <DialogContentText>\n          <h3>Already have an account? <a href=\"\">Log In here.</a></h3>\n\n          </DialogContentText>\n          <hr/>\n          <TextField\n            // autoFocus\n            // size='normal'\n            variant='outlined'\n            margin=\"dense\"\n            id=\"username\"\n            label=\"Username\"\n            type=\"email\"\n            fullWidth\n          />\n\n          {/* <hr/> */}\n          <TextField\n\n            // size='normal'\n            variant='outlined'\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n                 <br/>\n          <TextField\n            // size='normal'\n            variant='outlined'\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"email\"\n            fullWidth\n          />\n                 <hr/>\n        </DialogContent>\n        <hr/>\n      <hr/>\n      <hr/>\n      <hr/>\n      {/* <hr/> */}\n        <DialogActions>\n          <button  style={{backgroundColor: 'gold', fontSize:'15px', borderRadius:'7px', padding: '10px'}} onClick={handleClose} >\n           {'<<<< ❌ Sign up Later'}\n          </button>\n          <button style={{backgroundColor: 'gold',  fontSize:'15px', borderRadius:'7px', padding: '10px'}} onClick={handleClose} >\n            Create Account ➕\n          </button>\n        </DialogActions>\n      <hr/>\n      <hr/>\n      <hr/>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Signup;","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/login/Login.js",["73","74","75"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/useToken.js",["76"],"import { useState } from 'react';\n\nconst useToken =()=> {\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        return userToken?.token\n    };\n\n    const [token, setToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        setToken(userToken.token);\n    };\n\n    const removeToken = ()=>{\n        localStorage.removeItem(token)\n    }\n\n    return {\n        setToken: saveToken,\n        token\n    }\n}\nexport default useToken;","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/MyWatchlist/MyWatchlist.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/myWatchlist/MyWatchlist.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/myCollection/MyCollection.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":30,"column":22,"nodeType":"83","messageId":"84","endLine":30,"endColumn":35},{"ruleId":"81","severity":1,"message":"86","line":31,"column":24,"nodeType":"83","messageId":"84","endLine":31,"endColumn":39},{"ruleId":"81","severity":1,"message":"87","line":33,"column":10,"nodeType":"83","messageId":"84","endLine":33,"endColumn":22},{"ruleId":"81","severity":1,"message":"88","line":33,"column":24,"nodeType":"83","messageId":"84","endLine":33,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":56,"column":4,"nodeType":"91","endLine":56,"endColumn":6,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":71,"column":31,"nodeType":"95","messageId":"96","endLine":71,"endColumn":33},{"ruleId":"81","severity":1,"message":"97","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":18},{"ruleId":"81","severity":1,"message":"98","line":1,"column":20,"nodeType":"83","messageId":"84","endLine":1,"endColumn":29},{"ruleId":"81","severity":1,"message":"99","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":26},{"ruleId":"81","severity":1,"message":"98","line":1,"column":9,"nodeType":"83","messageId":"84","endLine":1,"endColumn":18},{"ruleId":"81","severity":1,"message":"97","line":1,"column":20,"nodeType":"83","messageId":"84","endLine":1,"endColumn":28},{"ruleId":"81","severity":1,"message":"100","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":20},{"ruleId":"81","severity":1,"message":"101","line":16,"column":7,"nodeType":"83","messageId":"84","endLine":16,"endColumn":15},{"ruleId":"81","severity":1,"message":"102","line":17,"column":7,"nodeType":"83","messageId":"84","endLine":17,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":31,"column":30,"nodeType":"95","messageId":"96","endLine":31,"endColumn":32},{"ruleId":"93","severity":1,"message":"103","line":51,"column":30,"nodeType":"95","messageId":"104","endLine":51,"endColumn":32},{"ruleId":"105","severity":1,"message":"106","line":104,"column":7,"nodeType":"107","messageId":"108","endLine":108,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":109,"column":7,"nodeType":"107","messageId":"108","endLine":109,"endColumn":24},{"ruleId":"81","severity":1,"message":"109","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":58,"column":40,"nodeType":"112","endLine":58,"endColumn":51},{"ruleId":"81","severity":1,"message":"109","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"113","line":37,"column":10,"nodeType":"83","messageId":"84","endLine":37,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":77,"column":43,"nodeType":"112","endLine":77,"endColumn":54},{"ruleId":"81","severity":1,"message":"114","line":17,"column":11,"nodeType":"83","messageId":"84","endLine":17,"endColumn":22},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'setPageNumber' is assigned a value but never used.","'setCoinsPerPage' is assigned a value but never used.","'currencyType' is assigned a value but never used.","'setCurrencyType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coinResults' and 'getCryptoData'. Either include them or remove the dependency array.","ArrayExpression",["117"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'CoinGeckoApi' is defined but never used.","'nameData' is assigned a value but never used.","'symbolData' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'email' is assigned a value but never used.","'removeToken' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [coinResults, getCryptoData]",{"range":"120","text":"121"},[1907,1909],"[coinResults, getCryptoData]"]