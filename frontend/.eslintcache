[{"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/index.js":"1","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/App.js":"2","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/coinGeckoAPI/coinGeckoData.js":"3","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/search/Search.js":"4","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/search/SearchResults.js":"5","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/pagination/Pagination.js":"6"},{"size":464,"mtime":1608926693434,"results":"7","hashOfConfig":"8"},{"size":3228,"mtime":1611763667625,"results":"9","hashOfConfig":"8"},{"size":2023,"mtime":1611762356125,"results":"10","hashOfConfig":"8"},{"size":4026,"mtime":1611633716627,"results":"11","hashOfConfig":"8"},{"size":2163,"mtime":1611286983611,"results":"12","hashOfConfig":"8"},{"size":715,"mtime":1611762479287,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"pv58m6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/index.js",[],["29","30"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/App.js",["31","32","33","34","35"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/coinGeckoAPI/coinGeckoData.js",["36","37"],"import { useState, useEffect } from \"react\";\nimport \"./coinGeckoData.css\";\n\n\n\n\nconst CoinGeckoApi = ({coinResults, loading}) => {\n    if (loading){\n        return <div className=\"loader\">Loading...</div>\n    }\n    console.log(coinResults)\n    //=============================================================================================================//\n    //=============================================================================================================//\n\n\n    const currencyObj = {\n        style: \"currency\",\n        currency: \"usd\",\n        // currencyDisplay: 'code'\n    }\n    \n    \n    \n\n\n\n\n//=============================================================================================================//\n//=============================================================================================================//\n    return (\n\n        // resultRender\n\n        \n        <div className=\"coin__info\">\n\n        {coinResults.map((coinInfo) => (\n\n                <div \n                    key={coinInfo.id} \n                    className=\"coin__card\"        \n                >\n                    <div className=\"card__rank\">Rank: #{coinInfo.market_data.market_cap_rank} {<br/>} ( {coinInfo.symbol.toUpperCase()} ) </div>\n                    <div className=\"card__marketcap\">MCap: {coinInfo.market_data.market_cap.usd.toLocaleString()}</div>\n                    {/* <div className=\"card__marketcap\">MCap: {coinInfo.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n                    <img className=\"card__image\" src={coinInfo.image.large} alt={coinInfo.name}/>\n                    <div className=\"card__name\">{coinInfo.name}</div>\n                    <div className=\"current__price\">  Price</div>\n                    <div className=\"card__price\">{coinInfo.market_data.current_price.usd.toLocaleString(\"en-US\",currencyObj)}</div>\n                </div>\n                \n\n\n                \n                ))}\n                </div>\n\n    );\n\n};\n\nexport default CoinGeckoApi;\n","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/search/Search.js",["38","39","40"],"import {useEffect, useState} from 'react'\nimport './Search.css'\nimport CoinGeckoApi from '../coinGeckoAPI/coinGeckoData'\nimport SearchResults from './SearchResults'\nconst CoinGecko = require('coingecko-api');\n\n//2. Initiate the CoinGecko API Client\nconst CoinGeckoClient = new CoinGecko();\n\n\n\n// func()\nconst Search = ({coinResults, loading, searchValue, setSearchValue, setCoinResults}) => {\n    // const [searchValue, setSearchValue] = useState('')\n    // const[coinResults, setCoinResults] = useState([])\n\n\n    const handleSearchInput = async (inputValue)=>{\n      setSearchValue(inputValue)\n      // let data =  await CoinGeckoClient.coins.all();\n      let allCoins = await CoinGeckoClient.coins.list();\n      setCoinResults(allCoins.data)\n    }\n\n    // return (\n    //   <div className=\"search__element\">\n    //         <input \n    //             className=\"search__input\"\n    //             type=\"text\"\n    //             placeholder=\"Search cryptocurrencies\"\n    //             value={searchValue}\n    //             onChange={(e)=> handleSearchInput(e.target.value)}\n    //             />\n    //         <button \n    //           className=\"search__button\"\n    //           // onClick={handleSearchButton}\n    //           >Search\n          \n    //         </button>     \n    //         <SearchResults handleSearchInput={handleSearchInput}/>\n    //         </div>\n    // )\n\n        \n    // }\n      const searchBar = \n      <div className=\"search__element\">\n      <input \n          className=\"search__input\"\n          type=\"text\"\n          placeholder=\"Search cryptocurrencies\"\n          value={searchValue}\n          onChange={(e)=> handleSearchInput(e.target.value)}\n          />\n      <button \n        className=\"search__button\"\n        // onClick={handleSearchButton}\n        >Search\n      </button>    \n      </div>\n\n    \n\n        const searchIdentifiers =  \n        <div className=\"coin__info\">\n\n        {coinResults.filter(coinInfo =>\n          coinInfo.id.includes(searchValue) ||  coinInfo.id.toUpperCase().includes(searchValue)\n          || coinInfo.symbol.includes(searchValue) || coinInfo.symbol.toUpperCase().includes(searchValue)\n          || coinInfo.name.includes(searchValue) || coinInfo.name.toUpperCase().includes(searchValue))\n          .map(filteredCoin=>(\n            <div \n            key={filteredCoin.id} \n            className=\"coin__card\"        \n        >\n            <div className=\"card__rank\">Rank: #{filteredCoin.market_data.market_cap_rank} {<br/>}( {filteredCoin.symbol.toUpperCase()} ) </div>\n            {/* <div className=\"card__marketcap\">{filteredCoin.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n            <img className=\"card__image\" src={filteredCoin.image.large} alt={filteredCoin.name}/>\n            <div className=\"card__name\">{filteredCoin.name}</div>\n            <div className=\"card__price\"> ${filteredCoin.market_data.current_price.usd}</div>\n        </div>\n\n\n          ))\n        \n        }\n          </div>\n          \n\n\n\n  \n\n  // const handleSearchButton =(e)=>{\n  //   console.log(searchValue)\n\n\n  // }\n\n    return (\n\n        //<div className=\"search__element\"> */}\n        //     <input \n        //         className=\"search__input\"\n        //         type=\"text\"\n        //         placeholder=\"Search cryptocurrencies\"\n        //         value={searchValue}\n        //         onChange={(e)=> handleSearchInput(e.target.value)}\n        //         />\n        //     <button \n        //       className=\"search__button\"\n        //       onClick={handleSearchButton}\n        //       >Search\n        //     </button>     \n        <div>\n          {searchBar}\n\n            {/* <div className=\"coin__info\"> */}\n            {searchValue.length === 0? \n                  <div>\n                    <CoinGeckoApi/>\n                  </div> \n                  :\n                  <div>\n                    {searchIdentifiers}\n                  </div>\n          }\n          </div>\n  \n      // </div>  \n\n      \n    )\n    }\n\nexport default Search;","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/search/SearchResults.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/pagination/Pagination.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":23,"column":10,"nodeType":"47","messageId":"48","endLine":23,"endColumn":21},{"ruleId":"45","severity":1,"message":"50","line":23,"column":23,"nodeType":"47","messageId":"48","endLine":23,"endColumn":37},{"ruleId":"45","severity":1,"message":"51","line":25,"column":24,"nodeType":"47","messageId":"48","endLine":25,"endColumn":39},{"ruleId":"52","severity":1,"message":"53","line":37,"column":4,"nodeType":"54","endLine":37,"endColumn":6,"suggestions":"55"},{"ruleId":"45","severity":1,"message":"56","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":18},{"ruleId":"45","severity":1,"message":"57","line":1,"column":20,"nodeType":"47","messageId":"48","endLine":1,"endColumn":29},{"ruleId":"45","severity":1,"message":"57","line":1,"column":9,"nodeType":"47","messageId":"48","endLine":1,"endColumn":18},{"ruleId":"45","severity":1,"message":"56","line":1,"column":20,"nodeType":"47","messageId":"48","endLine":1,"endColumn":28},{"ruleId":"45","severity":1,"message":"58","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":21},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.","'setCoinsPerPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCryptoData'. Either include it or remove the dependency array.","ArrayExpression",["61"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'SearchResults' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [getCryptoData]",{"range":"64","text":"65"},[1154,1156],"[getCryptoData]"]