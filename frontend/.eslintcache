[{"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/index.js":"1","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/App.js":"2","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/coinGeckoAPI/coinGeckoData.js":"3","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/pagination/Pagination.js":"4","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/search/Search.js":"5","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/signup/Signup.js":"6","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/login/Login.js":"7","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/useToken.js":"8","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/MyWatchlist/MyWatchlist.js":"9","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/myWatchlist/MyWatchlist.js":"10","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/myCollection/MyCollection.js":"11"},{"size":464,"mtime":1608926693434,"results":"12","hashOfConfig":"13"},{"size":5672,"mtime":1613667607005,"results":"14","hashOfConfig":"13"},{"size":4229,"mtime":1613581836091,"results":"15","hashOfConfig":"13"},{"size":716,"mtime":1613076484241,"results":"16","hashOfConfig":"13"},{"size":6050,"mtime":1613585667367,"results":"17","hashOfConfig":"13"},{"size":3413,"mtime":1613666238371,"results":"18","hashOfConfig":"13"},{"size":4368,"mtime":1613667503471,"results":"19","hashOfConfig":"13"},{"size":663,"mtime":1613667549855,"results":"20","hashOfConfig":"13"},{"size":125,"mtime":1613105225504,"results":"21","hashOfConfig":"13"},{"size":125,"mtime":1613105225504,"results":"22","hashOfConfig":"13"},{"size":130,"mtime":1613105357971,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pv58m6",{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/index.js",[],["49","50"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/App.js",["51","52","53","54","55","56","57","58","59"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/coinGeckoAPI/coinGeckoData.js",["60","61","62"],"import { useState, useEffect } from \"react\";\nimport \"./coinGeckoData.css\";\nimport Search from '../search/Search'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n\n\nconst CoinGeckoApi = ({coinResults, loading, setCoinResults, searchValue,setSearchValue, allCoinINS, setSearchedCoins, searchedCoins, coinsPerPage, pageNumber}) => {\n    if (loading){\n        return <div className=\"loader\">Loading...</div>\n    }\n\n    //=============================================================================================================//\n    //=============================================================================================================//\n\n    const currencyObj = {\n        style: \"currency\",\n        currency: \"usd\",\n        // currencyDisplay: 'code'\n    }\n\nconsole.log(coinResults)\nconsole.log(searchedCoins)\nconsole.log(searchValue)\n// console.log(searchValue.length)\n\n//=============================================================================================================//\n//=============================================================================================================//\n// setCoinResults(coinResults)\n    return (\n\n\n        \n        <div>\n\n            {/* <nav className=\"router__tabs\"> */}\n                {/* <div className=\"my__collection__tab\">\n                    My Collection\n                </div>\n                <div  className=\"my__watchlist__tab\">\n                    My Watchlist\n                </div>\n             */}\n            <Search \n                coinResults={coinResults}\n                setSearchValue={setSearchValue}\n                searchValue={searchValue}\n                allCoinINS={allCoinINS}\n                setCoinResults={setCoinResults}\n                setSearchedCoins={setSearchedCoins}\n                searchedCoins={searchedCoins}\n                />\n            {/* </nav> */}\n             {/* </div> */}\n\n            {searchValue.length === 0 ?        \n                \n                \n                <div className=\"coin__info\">\n            {/* <div>  \n            <div> */}\n            {/* <div className=\"search__length\"> showing Top {coinsPerPage} of Page {pageNumber} </div>  */}\n                    {coinResults.map((coinInfo) => (\n                    <div \n                    key={coinInfo.id} \n                    className=\"coin__card\"        \n                    >\n                        {/* <div className=\"favorite__icon\"> {FavoriteBorderIcon}</div> */}\n                        <div className=\"card__rank\">{\"_\"}Rank: #{coinInfo.market_data.market_cap_rank} {<br/>} <strong> ( {coinInfo.symbol.toUpperCase()} )</strong> </div>\n                        <div className=\"card__marketcap\"> MCap: {coinInfo.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div>\n                        <div className=\"card__circulating__supply\">Circulating Supply:{<br/>} {Number(coinInfo.market_data.circulating_supply).toLocaleString(\"en-US\")} <strong> {coinInfo.symbol.toUpperCase()}</strong></div>\n                        \n                        {/* <div className=\"card__marketcap\">MCap: {coinInfo.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n                        <img className=\"card__image\" src={coinInfo.image.large} alt={coinInfo.name}/>\n                        <div className=\"card__name\">{coinInfo.name}</div>\n                        <div className=\"current__price\">  Price</div>\n                            <div className=\"card__price\"> USD:  {\"  \"}{coinInfo.market_data.current_price.usd.toLocaleString(\"en-US\",currencyObj)} \n                            <hr/> \n                            BTC: â‚¿{coinInfo.market_data.current_price.btc}\n                            <hr/> \n                            ETH: {coinInfo.market_data.current_price.eth}\n                            <hr/>    \n                            </div>      \n                    \n                    \n                    </div>\n                    \n\n                    \n                    ))}\n                </div>\n                    :\n                    \n                    <div>\n        \n\n            </div>\n\n/* </div> */\n\n            }   \n            </div>\n\n    )\n\n}\n\nexport default CoinGeckoApi;\n","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/pagination/Pagination.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/search/Search.js",["63","64","65","66","67","68","69","70","71","72","73"],"import {useEffect, useState} from 'react'\nimport './Search.css'\nimport CoinGeckoApi from '../coinGeckoAPI/coinGeckoData'\nconst CoinGecko = require('coingecko-api');\n\n\n\n\n\n\n// func()\nconst Search =  ({ searchValue, setSearchValue, setCoinResults, coinResults, loading, allCoinINS, currencyType, setCurrencyType, setSearchedCoins, searchedCoins}) => {\n\n\nconst idData = []\nconst nameData = []\nconst symbolData = []\n\n{/* =============================================================================================================*/}\n{/* =============================================================================================================*/}\n  \n\n\n    const handleSearchInput =  async(inputValue)=>{\n    \n\n      setSearchValue(inputValue)\n      // setCoinResults(coinResults)\n      console.log(inputValue)\n\n\n      // const getEach =\n        allCoinINS.map(value =>{\n    \n        idData.push(value.id)\n        // nameData.push(value.name)\n        // symbolData.push(value.symbol)\n        \n\n        })\n{/* =============================================================================================================*/}\n{/* =============================================================================================================*/}\n  \n\n        const filteredSearch = idData.filter(value => value.includes(inputValue))\n        // console.log(filteredSearch)\n        const CoinGeckoClient = new CoinGecko();\n\n        let market =  await CoinGeckoClient.coins.markets({ vs_currency: currencyType, ids: filteredSearch})\n        // console.log(market)\n\n        \n        const filteredSearchArray =[]\n        \n      market.data.map((value)=>{\n\n        if(value.market_cap === null){\n          let acceptedCoin = value\n          \n    \n          return acceptedCoin\n\n        }\n\n            \n            let coinCard = {\n              id: value.id,\n              name: value.name,\n              symbol: value.symbol,\n              market_cap_rank:value.market_cap_rank,\n              market_cap: value.market_cap,\n              circulating_supply: value.circulating_supply,\n              image: value.image,\n              current_price: value.current_price\n\n            }\n            \n            \n            filteredSearchArray.push(coinCard)\n\n          \n        })\n        console.log(filteredSearchArray)\n        setSearchedCoins(filteredSearchArray)\n        // setCoinResults(filteredSearchArray)\n        \n      }\n  \n    //  setCoinResults(coinResults)\n      //  console.log(acceptedCoin)\n      // }\n      // )/\n\n\n    \n\n      const searchBar = \n      // <div className=\"search__element\">\n      <nav className=\"search__element\">\n\n      <input \n          className=\"search__input\"\n          type=\"text\"\n          placeholder=\" Search Cryptocurrencies\"\n          value={searchValue}\n          onChange={(e)=> handleSearchInput(e.target.value)}\n          />\n      {/* <button \n        className=\"search__button\"\n        // onClick={handleSearchButton}\n        >Search\n      </button>     */}\n      {/* // </div> */}\n\n </nav>\n    \n\n    const currencyObj = {\n      style: \"currency\",\n      currency: \"usd\",\n      // currencyDisplay: 'code'\n  }\n\n        const searchIdentifiers =  \n        \n\n        <div className=\"coin__info\">\n\n        {searchedCoins.filter(coinInfo =>\n\n          coinInfo.id.includes(searchValue) ||\n            coinInfo.id.toUpperCase().includes(searchValue)\n          || \n          coinInfo.symbol.includes(searchValue) || coinInfo.symbol.toUpperCase().includes(searchValue)\n          ||\n          coinInfo.name.includes(searchValue) || coinInfo.name.toUpperCase().includes(searchValue))\n          .map(filteredCoin=>(\n            <div \n            key={filteredCoin.id} \n            className=\"coin__card\"        \n        >\n            {/* <div className=\"card__rank\">Rank: #{filteredCoin.market_data.market_cap_rank} {<br/>}( {filteredCoin.symbol.toUpperCase()} ) </div>\n            <div className=\"card__marketcap\">{filteredCoin.market_data.market_cap.usd.toLocaleString(\"en-US\")}</div>\n            <img className=\"card__image\" src={filteredCoin.image.large} alt={filteredCoin.name}/>\n            <div className=\"card__name\">{filteredCoin.name}</div>\n            <div className=\"card__price\"> ${filteredCoin.market_data.current_price.usd}</div> */}\n\n                    <div className=\"card__rank\">{\"_ \"}Rank: #{filteredCoin.market_cap_rank} {<br/>} _<strong> ( {filteredCoin.symbol.toUpperCase()} )</strong> </div>\n                    <div className=\"card__marketcap\">MCap: {filteredCoin.market_cap.toLocaleString(\"en-US\",currencyObj )}</div>\n                    <div className=\"card__circulating__supply\">Circulating Supply: {<br/>} {Number(filteredCoin.circulating_supply).toLocaleString(\"en-US\")} <strong> {filteredCoin.symbol.toUpperCase()}</strong></div>\n                    \n\n                    <img className=\"card__image\" src={filteredCoin.image} alt={filteredCoin.name}/>\n                    <div className=\"card__name\">{filteredCoin.name}</div>\n                    <div className=\"current__price\">  Price</div>\n                    <div className=\"card__price\"> USD:  {\"  \"}{filteredCoin.current_price} \n                    {/* <hr/>  */}\n                    {/* BTC: â‚¿{filteredCoin.current_price.btc} */}\n                    {/* <hr/>  */}\n                    {/* ETH: {filteredCoin.current_price.eth} */}\n                    {/* <hr/>  */}\n\n                    </div>\n        </div>\n\n\n          ))\n        \n        }\n          </div>\n          \n\n\n\n    return (\n\n\n        <div>\n          {searchBar}\n\n            \n                  <div>\n                  {searchValue.length !== 0 ?\n                      <div>\n                        <div className=\"search__length\">\n                          {searchedCoins.length} matching Results\n                        </div>\n                      {searchIdentifiers}\n                      </div>\n                    :\n                    <div>\n                    </div>\n                  }\n                  </div>  \n      </div>  \n\n      \n    )\n    }\n\nexport default Search;","/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/signup/Signup.js",["74","75"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/login/Login.js",["76","77","78","79","80","81"],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/useToken.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/MyWatchlist/MyWatchlist.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/myWatchlist/MyWatchlist.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/coin-collection-cryptocurrency/frontend/src/components/myCollection/MyCollection.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":40,"nodeType":"88","messageId":"89","endLine":4,"endColumn":44},{"ruleId":"86","severity":1,"message":"90","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"86","severity":1,"message":"91","line":12,"column":8,"nodeType":"88","messageId":"89","endLine":12,"endColumn":16},{"ruleId":"86","severity":1,"message":"92","line":30,"column":22,"nodeType":"88","messageId":"89","endLine":30,"endColumn":35},{"ruleId":"86","severity":1,"message":"93","line":31,"column":24,"nodeType":"88","messageId":"89","endLine":31,"endColumn":39},{"ruleId":"86","severity":1,"message":"94","line":33,"column":10,"nodeType":"88","messageId":"89","endLine":33,"endColumn":22},{"ruleId":"86","severity":1,"message":"95","line":33,"column":24,"nodeType":"88","messageId":"89","endLine":33,"endColumn":39},{"ruleId":"96","severity":1,"message":"97","line":48,"column":4,"nodeType":"98","endLine":48,"endColumn":6,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":63,"column":31,"nodeType":"102","messageId":"103","endLine":63,"endColumn":33},{"ruleId":"86","severity":1,"message":"104","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":18},{"ruleId":"86","severity":1,"message":"105","line":1,"column":20,"nodeType":"88","messageId":"89","endLine":1,"endColumn":29},{"ruleId":"86","severity":1,"message":"106","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":26},{"ruleId":"86","severity":1,"message":"105","line":1,"column":9,"nodeType":"88","messageId":"89","endLine":1,"endColumn":18},{"ruleId":"86","severity":1,"message":"104","line":1,"column":20,"nodeType":"88","messageId":"89","endLine":1,"endColumn":28},{"ruleId":"86","severity":1,"message":"107","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":20},{"ruleId":"86","severity":1,"message":"108","line":16,"column":7,"nodeType":"88","messageId":"89","endLine":16,"endColumn":15},{"ruleId":"86","severity":1,"message":"109","line":17,"column":7,"nodeType":"88","messageId":"89","endLine":17,"endColumn":17},{"ruleId":"110","severity":1,"message":"111","line":19,"column":1,"nodeType":"112","messageId":"113","endLine":19,"endColumn":117},{"ruleId":"110","severity":1,"message":"111","line":20,"column":1,"nodeType":"112","messageId":"113","endLine":20,"endColumn":117},{"ruleId":"100","severity":1,"message":"101","line":33,"column":30,"nodeType":"102","messageId":"103","endLine":33,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":41,"column":1,"nodeType":"112","messageId":"113","endLine":41,"endColumn":117},{"ruleId":"110","severity":1,"message":"111","line":42,"column":1,"nodeType":"112","messageId":"113","endLine":42,"endColumn":117},{"ruleId":"100","severity":1,"message":"114","line":55,"column":30,"nodeType":"102","messageId":"115","endLine":55,"endColumn":32},{"ruleId":"86","severity":1,"message":"116","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":58,"column":40,"nodeType":"119","endLine":58,"endColumn":51},{"ruleId":"86","severity":1,"message":"120","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"86","severity":1,"message":"121","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":13},{"ruleId":"86","severity":1,"message":"116","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"86","severity":1,"message":"122","line":37,"column":10,"nodeType":"88","messageId":"89","endLine":37,"endColumn":15},{"ruleId":"86","severity":1,"message":"123","line":57,"column":11,"nodeType":"88","messageId":"89","endLine":57,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":81,"column":43,"nodeType":"119","endLine":81,"endColumn":54},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'useToken' is defined but never used.","'setPageNumber' is assigned a value but never used.","'setCoinsPerPage' is assigned a value but never used.","'currencyType' is assigned a value but never used.","'setCurrencyType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coinResults' and 'getCryptoData'. Either include them or remove the dependency array.","ArrayExpression",["126"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'CoinGeckoApi' is defined but never used.","'nameData' is assigned a value but never used.","'symbolData' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PropTypes' is defined but never used.","'axios' is defined but never used.","'email' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [coinResults, getCryptoData]",{"range":"129","text":"130"},[1682,1684],"[coinResults, getCryptoData]"]